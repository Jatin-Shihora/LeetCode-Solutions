```
class Solution {
public:
int numPairsDivisibleBy60(vector<int>& time) {
int map[60] = {};
int result = 0;
for(auto x:time){
int t = x % 60;
int y = (60 - t)%60;
result += map[y];
map[t]++;
}
return result;
}
};
```
***
**Python Code:-**
```
class Solution(object):
def numPairsDivisibleBy60(self, time):
mapp = [0] * 60
result = 0
for x in time:
result += mapp[-x % 60]
mapp[x % 60] += 1
return result
```
**Time Complexity :** *`O(n) (where n is the size of time)`*
**Space Complexity :** *`O(60) (Can be cconsidered O(1) if the time duration 60s is treated as constant )`*